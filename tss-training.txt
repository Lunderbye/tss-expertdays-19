_Intro_
You should have your own login/password and in an email
A personal org is created for you during Technical Sales Summit, TSS
During expert days each city will have an org, created by Peter Andersson, peter.andersson@suse.com

Clone this repo:
git clone https://github.com/it-slav/tss-expertdays-19.git

All the labs are in: tss-expertdays-19/demos/

PLEASE, try not to break the system. With 100s of running apps, things can go wrong. Standing on Expert days with a broken
demo system is not fun.

Hint:
cf help -a

Login to CAP
cf login -a  https://api.cap.suselinux.info --skip-ssl-validation -u <USERNAME>
cf create-space test
cf target -o "YOURORG" -s "test"

Lab 1, first push 
cd 03-push/web-app
cat config.ru
cf push

cf apps

Lab 2, modify app 
vi config.ru
push the app
verify that the changes took place
log into https://stratos.cap.suselinux.info and play around

Lab 3, logs and shell
cd ../worker-app/
cf push
cf logs worker-app
cf ssh worker-app
	ps -ef
	find /
	ctrl-d

Lab 4 Scaling and autohealing 
cd /05-resilience/imperfect-app
modify manifest.yml
	  instances: 2
cf push
log in to https://stratos.cap.suselinux.info
	scale up to 4 instances

have 2 screens next to each other:
stratos and imperfect app
crash (by click crash the app) and look at stratos to see how apps are restarted
try 'watch -n1  cf apps' and 'watch -n1 cf app imperfect-app'

Lab 5, smooth deployment and routes
host whatever.cap.suselinux.info
host bla.cap.it-slav.net

NOTE! Use unique hostname, i.e. your org
modify config.ru
	<h1>v1</h1>
Example mod-manifest.yaml
applications:
- name: web-app_v1
  memory: 64M
  instances: 2
  host: myapp
  domain: cap.it-slav.net
cf push -f mod-manifest.yml
scale up to 4 instances either command line or stratos



Modify config.ru
        <h1>v2</h1>
modify mod-manifest.yml
- name: web-app_v2
cf push -f mod-manifest.yml

smoothly phase out the old version.


Lab 6, stateful app
cd 07-shared-state/stateful-app/
cf marketplace
show marketplace in stratos
cf push --no-start
cf create-service redis 4-0-10 stateful-app-redis
cf services
cf bind-service stateful-app stateful-app-redis
cf env stateful-app


CLEAN UP!!!
cf delete -rf <APP-NAME>
